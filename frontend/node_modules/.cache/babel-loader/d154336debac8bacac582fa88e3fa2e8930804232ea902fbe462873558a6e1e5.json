{"ast":null,"code":"var _jsxFileName = \"D:\\\\CC Lab\\\\Single Signon\\\\frontend\\\\src\\\\Protected.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Protected = () => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const user = JSON.parse(localStorage.getItem(\"user\")); // Retrieve stored user\n\n  useEffect(() => {\n    if (!token) {\n      setData(\"Unauthorized\");\n      return;\n    }\n    axios.get(\"http://localhost:5000/protected\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => setData(`Protected Data for ${user === null || user === void 0 ? void 0 : user.username}: ${res.data.message}`)).catch(() => setData(\"Invalid token or session expired\"));\n  }, [token, user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Protected Route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Protected, \"SdShWBeHkV26fLNog65mn1O2hHw=\");\n_c = Protected;\nexport default Protected;\nvar _c;\n$RefreshReg$(_c, \"Protected\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Protected","_s","data","setData","token","localStorage","getItem","user","JSON","parse","get","headers","Authorization","then","res","username","message","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CC Lab/Single Signon/frontend/src/Protected.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Protected = () => {\r\n    const [data, setData] = useState(\"\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const user = JSON.parse(localStorage.getItem(\"user\")); // Retrieve stored user\r\n\r\n    useEffect(() => {\r\n        if (!token) {\r\n            setData(\"Unauthorized\");\r\n            return;\r\n        }\r\n\r\n        axios.get(\"http://localhost:5000/protected\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n            .then((res) => setData(`Protected Data for ${user?.username}: ${res.data.message}`))\r\n            .catch(() => setData(\"Invalid token or session expired\"));\r\n    }, [token, user]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Protected Route</h2>\r\n            <p>{data}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Protected;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEvDV,SAAS,CAAC,MAAM;IACZ,IAAI,CAACQ,KAAK,EAAE;MACRD,OAAO,CAAC,cAAc,CAAC;MACvB;IACJ;IAEAN,KAAK,CAACa,GAAG,CAAC,iCAAiC,EAAE;MACzCC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUR,KAAK;MAAG;IAChD,CAAC,CAAC,CACGS,IAAI,CAAEC,GAAG,IAAKX,OAAO,CAAC,sBAAsBI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,QAAQ,KAAKD,GAAG,CAACZ,IAAI,CAACc,OAAO,EAAE,CAAC,CAAC,CACnFC,KAAK,CAAC,MAAMd,OAAO,CAAC,kCAAkC,CAAC,CAAC;EACjE,CAAC,EAAE,CAACC,KAAK,EAAEG,IAAI,CAAC,CAAC;EAEjB,oBACIR,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA;MAAAmB,QAAA,EAAIhB;IAAI;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEd,CAAC;AAACrB,EAAA,CAxBID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}